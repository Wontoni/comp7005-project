digraph Client {
    node [shape=circle; fontsize=10; width=1;height=1;];
    edge [fontsize=10];

    START [label="START", shape=doublecircle]
    PARSE_ARGS [label="PARSE_ARGS", shape=circle]
    HANDLE_ARGS [label="HANDLE_ARGS", shape=circle]
    HANDLE_ERROR [label="HANDLE_ERROR", shape=circle]
    DISPLAY_MESSAGE [label="DISPLAY_MESSAGE", shape=circle]
    SOCKET_CREATED [label="SOCKET_CREATED", shape=circle]
    SOCKET_BINDED [label="SOCKET_BINDED", shape=circle]
    SEND_DATA [label="SEND_DATA", shape=circle]
    CONNECTION_RECEIVED [label="CONNECTION_RECEIVED", shape=circle]
    
    THREEWAY_HANDSHAKE [label="THREEWAY_HANDSHAKE", shape=circle]
    FOURWAY_HANDSHAKE [label="FOURWAY_HANDSHAKE", shape=circle]
    CLEANUP [label="CLEANUP", shape=circle]
    EXIT [label="EXIT", shape=doublecircle]

    START -> PARSE_ARGS [label="parse_args"]
    PARSE_ARGS -> HANDLE_ARGS [label="handle_args"]
    PARSE_ARGS -> HANDLE_ERROR [label="handle_error"]
    HANDLE_ARGS -> SOCKET_CREATED [label="create_socket"]
    HANDLE_ARGS -> HANDLE_ERROR [label="handle_error"]
    SOCKET_CREATED -> SOCKET_BINDED [label="bind_socket"]
    SOCKET_CREATED -> HANDLE_ERROR [label="handle_error"]
    SOCKET_BINDED -> SEND_DATA [label="send_data"]
    SOCKET_BINDED -> HANDLE_ERROR [label="handle_error"]
    SEND_DATA -> CONNECTION_RECEIVED [label="receive_connection"]
    SEND_DATA -> HANDLE_ERROR [label="handle_error"]
    CONNECTION_RECEIVED -> THREEWAY_HANDSHAKE [label="handle_connection"]
    THREEWAY_HANDSHAKE -> FOURWAY_HANDSHAKE [label="display_message"]
    THREEWAY_HANDSHAKE -> HANDLE_ERROR [label="handle_error"]
    FOURWAY_HANDSHAKE -> HANDLE_ERROR [label="handle_error"]
    FOURWAY_HANDSHAKE -> DISPLAY_MESSAGE[label="display_message"]
    DISPLAY_MESSAGE -> CLEANUP [label="cleanup"]
    HANDLE_ERROR -> CLEANUP [label="cleanup"]
    CLEANUP -> EXIT
}