digraph Client {
    node [shape=circle; fontsize=10; width=1;height=1;];
    edge [fontsize=10];

    START [label="START", shape=doublecircle]
    PARSE_ARGS [label="PARSE_ARGS", shape=circle]
    HANDLE_ARGS [label="HANDLE_ARGS", shape=circle]
    HANDLE_ERROR [label="HANDLE_ERROR", shape=circle]
    SOCKET_CREATED [label="SOCKET_CREATED", shape=circle]
    CONNECTION_ESTABLISHED [label="CONNECTION_ESTABLISHED", shape=circle]
    THREEWAY_HANDSHAKE [label="THREEWAY_HANDSHAKE", shape=circle]
    FOURWAY_HANDSHAKE [label="FOURWAY_HANDSHAKE", shape=circle]
    TRANSMITTING [label="TRANSMITTING", shape=circle]
    WAITING [label="WAITING", shape=circle]
    RETRANSMITTING [label="RETRANSMITTING", shape=circle]
    CLEANUP [label="CLEANUP", shape=circle]
    EXIT [label="EXIT", shape=doublecircle]

    START -> PARSE_ARGS [label="parse_args"]
    PARSE_ARGS -> HANDLE_ARGS [label="handle_args"]
    PARSE_ARGS -> HANDLE_ERROR [label="handle_error"]
    HANDLE_ARGS -> SOCKET_CREATED [label="create_socket"]
    HANDLE_ARGS -> HANDLE_ERROR [label="handle_error"]
    SOCKET_CREATED -> CONNECTION_ESTABLISHED [label="connect_socket"]
    SOCKET_CREATED -> HANDLE_ERROR [label="handle_error"]
    CONNECTION_ESTABLISHED -> THREEWAY_HANDSHAKE [label="handle_connection"]
    THREEWAY_HANDSHAKE -> TRANSMITTING [label="transmit_data"]
    THREEWAY_HANDSHAKE -> HANDLE_ERROR [label="handle_error"]
    THREEWAY_HANDSHAKE -> WAITING [label="accept_packet"]
    TRANSMITTING -> WAITING [label="accept_packet"]
    WAITING -> TRANSMITTING [label="send_packet"]
    WAITING -> FOURWAY_HANDSHAKE [label="four_handshake"]
    WAITING -> RETRANSMITTING [label="handle_retransmission"]
    RETRANSMITTING -> WAITING [label="accept_packet"]
    FOURWAY_HANDSHAKE -> HANDLE_ERROR [label="handle_error"]
    FOURWAY_HANDSHAKE -> CLEANUP[label="cleanup"]
    FOURWAY_HANDSHAKE -> WAITING [label="accept_packet"]
    HANDLE_ERROR -> CLEANUP [label="cleanup"]
    CLEANUP -> EXIT
}